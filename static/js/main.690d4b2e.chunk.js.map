{"version":3,"sources":["lacan.png","Face.js","Year.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","Face","props","react_default","a","createElement","Container","Row","style","alignItems","Col","src","Lacan","alt","objectFit","width","href","target","rel","index_es","icon","faLinkedin","size","faGithub","faFacebook","Year","_ref","year","lists","map","_ref2","title","website","desc","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0MCUzBC,EAAA,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,MAAO,CAAEC,WAAY,WACxBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,OACEM,IAAKC,IACLC,IAAI,MACJL,MAAO,CAAEM,UAAW,UAAWC,MAAO,cAG1CZ,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,KACEW,KAAK,mCACLC,OAAO,SACPC,IAAI,uBAEJf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAiBC,KAAMC,IAAYC,KAAK,SAG5CnB,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,KACEW,KAAK,gCACLC,OAAO,SACPC,IAAI,uBAEJf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAiBC,KAAMG,IAAUD,KAAK,SAG1CnB,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,KACEW,KAAK,gCACLC,OAAO,SACPC,IAAI,uBAEJf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAiBC,KAAMI,IAAYF,KAAK,cC/CvCG,EAAA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,MAAT,OACbzB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,UAAKsB,GACLxB,EAAAC,EAAAC,cAAA,UACGuB,EAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,QAASC,EAAnBH,EAAmBG,KAAnB,OACT9B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAK0B,GACH5B,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,KAAGW,KAAMgB,GAAUA,IAErB7B,EAAAC,EAAAC,cAAA,UAAK4B,SCAKC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOrC,EAAAC,EAAAC,cCDD,kBACbF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACJ,EAAD,MACAE,EAAAC,EAAAC,cAACoB,EAAD,CACEE,KAAK,OACLC,MAAO,CACL,CACEG,MAAO,UACPE,KAAM,+BACND,QACE,uEAEJ,CACED,MAAO,wBACPE,KAAM,iDACND,QAAS,uDAEX,CACED,MAAO,eACPE,KAAM,4DACND,QAAS,0CAEX,CACED,MAAO,mBACPE,KAAM,yDACND,QAAS,cAIf7B,EAAAC,EAAAC,cAACoB,EAAD,CACEE,KAAK,OACLC,MAAO,CACL,CACEG,MAAO,aACPE,KAAM,8DACND,QAAS,0CAEX,CACED,MAAO,mBACPE,KAAM,6BACND,QAAS,kDAEX,CACED,MAAO,QACPE,KAAM,sCACND,QAAS,oBAEX,CACED,MAAO,iBACPE,KAAM,wDACND,QAAS,+CAEX,CACED,MAAO,cACPE,KAAM,mCACND,QAAS,kEAIf7B,EAAAC,EAAAC,cAACoB,EAAD,CACEE,KAAK,cACLC,MAAO,CACL,CACEG,MAAO,QACPE,KAAM,uCACND,QAAS,6BAEX,CACED,MAAO,eACPE,KAAM,uCACND,QAAS,mDDrEH,MAASS,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.690d4b2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lacan.2abd0a0d.png\";","import React from \"react\";\nimport Lacan from \"./lacan.png\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLinkedin,\n  faGithub,\n  faFacebook\n} from \"@fortawesome/free-brands-svg-icons\";\n\nexport default props => (\n  <Container>\n    <Row style={{ alignItems: \"center\" }}>\n      <Col>\n        <img\n          src={Lacan}\n          alt=\"img\"\n          style={{ objectFit: \"contain\", width: \"inherit\" }}\n        />\n      </Col>\n      <Col>\n        <h1>Swain Hwang</h1>\n        <h2>Web Dev.</h2>\n        <h3>Javascript</h3>\n        <Row /* style={{ justifyContent: \"space-between\" }} */>\n          <Col>\n            <a\n              href=\"https://linkedin.com/in/iamswain\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FontAwesomeIcon icon={faLinkedin} size=\"5x\" />\n            </a>\n          </Col>\n          <Col>\n            <a\n              href=\"https://github.com/iamswain25\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FontAwesomeIcon icon={faGithub} size=\"5x\" />\n            </a>\n          </Col>\n          <Col>\n            <a\n              href=\"https://facebook.com/iamswain\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FontAwesomeIcon icon={faFacebook} size=\"5x\" />\n            </a>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  </Container>\n);\n","import React from \"react\";\n\nexport default ({ year, lists }) => (\n  <section>\n    <h1>{year}</h1>\n    <ul>\n      {lists.map(({ title, website, desc }) => (\n        <li>\n          <h2>{title}</h2>\n            <h4>\n            <a href={website}>{website}</a>\n          </h4>\n          <h5>{desc}</h5>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport Face from \"./Face\";\nimport Year from \"./Year\";\nimport { Container } from \"react-bootstrap\";\nexport default () => (\n  <Container>\n    <Face />\n    <Year\n      year=\"2019\"\n      lists={[\n        {\n          title: \"Localee\",\n          desc: \"Tag Map based on geolocation\",\n          website:\n            \"https://play.google.com/store/apps/details?id=space.localee.android\"\n        },\n        {\n          title: \"Govt-expenditure-2019\",\n          desc: \"Tree map of K-govt 2019 Expenditure with D3.js\",\n          website: \"https://iamswain25.github.io/govt-expenditure-2019/\"\n        },\n        {\n          title: \"Cartido Expo\",\n          desc: \"Crowdmapping mobile app with React Native, Expo, Firebase\",\n          website: \"https://expo.io/@iamswain/cartido-expo\"\n        },\n        {\n          title: \"Cartido Frontend\",\n          desc: \"Crowdmapping mobile app generator with React, Firebase\",\n          website: \"private\"\n        }\n      ]}\n    />\n    <Year\n      year=\"2018\"\n      lists={[\n        {\n          title: \"US Refugee\",\n          desc: \"Total refugees settlement in States in 2002-2018 with D3.js\",\n          website: \"https://iamswain25.github.io/refugees/\"\n        },\n        {\n          title: \"Morley's Miracle\",\n          desc: \"Morley's trisector theorem\",\n          website: \"https://iamswain25.github.io/Morley-s-miracle/\"\n        },\n        {\n          title: \"B2ber\",\n          desc: \"Korean b2b solution review platform\",\n          website: \"https://b2ber.co\"\n        },\n        {\n          title: \"Political Life\",\n          desc: \"Translation project for a Communist's journal in 1994\",\n          website: \"https://iamswain25.github.io/political-life\"\n        },\n        {\n          title: \"Giga Viewer\",\n          desc: \"Museum viewer with OpenSeadragon\",\n          website: \"http://www.kyeonggi.com/news/articleView.html?idxno=1422692\"\n        }\n      ]}\n    />\n    <Year\n      year=\"2016 ~ 2017\"\n      lists={[\n        {\n          title: \"Eliga\",\n          desc: \"CMS for signage content broadcasting\",\n          website: \"http://www.eligaspace.com\"\n        },\n        {\n          title: \"Eliga Fabric\",\n          desc: \"signage layout drawer with Fabric.js\",\n          website: \"https://iamswain25.github.io/eliga_fabric/\"\n        }\n      ]}\n    />\n  </Container>\n);\n"],"sourceRoot":""}
{"version":3,"sources":["lacan.png","Face.js","Year.js","App.js","serviceWorker.js","index.js"],"names":["Face","props","Container","Row","style","alignItems","Col","src","Lacan","alt","objectFit","width","borderRadius","transform","site","icon","faLinkedin","faGithub","faFacebook","map","i","index","href","target","rel","marginRight","size","Year","year","lists","title","website","desc","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6KAAe,MAA0B,kC,uCCU1B,SAASA,EAAKC,GAC3B,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,MAAO,CAAEC,WAAY,UAA1B,UACE,cAACC,EAAA,EAAD,UACE,qBACEC,IAAKC,EACLC,IAAI,MACJL,MAAO,CACLM,UAAW,UACXC,MAAO,UACPC,aAAc,GACdC,UAAW,kBAIjB,eAACP,EAAA,EAAD,WACE,6CACA,0CACA,4CACA,cAACH,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,UACG,CACC,CAAEQ,KAAM,mCAAoCC,KAAMC,KAClD,CAAEF,KAAM,gCAAiCC,KAAME,KAC/C,CAAEH,KAAM,gCAAiCC,KAAMG,MAC/CC,KAAI,SAACC,EAAGC,GAAJ,OACJ,mBACEC,KAAMF,EAAEN,KACRS,OAAO,SACPC,IAAI,sBAEJpB,MAAO,CAAEqB,YAAa,IALxB,SAOE,cAAC,IAAD,CAAiBV,KAAMK,EAAEL,KAAMW,KAAK,QAH/BL,kBCvCR,SAASM,EAAT,GAAgC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACnC,OACE,oCACE,6BAAKD,IACL,6BACGC,EAAMV,KAAI,WAA2BC,GAA3B,IAAGU,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,KAAnB,OACT,+BACE,6BAAKF,IACL,6BACE,mBAAGR,KAAMS,EAASR,OAAO,SAASC,IAAI,sBAAtC,SACGO,MAGL,6BAAKC,MAPEZ,WCJJ,SAASa,IACtB,OACE,eAAC/B,EAAA,EAAD,WACE,cAACF,EAAD,IACA,cAAC2B,EAAD,CACEC,KAAK,OACLC,MAAO,CACL,CACEC,MAAO,iCACPE,KAAM,4EACND,QAAS,2BAEX,CACED,MAAO,uDACPE,KAAM,oFACND,QAAS,6BAEX,CACED,MAAO,2CACPE,KAAM,kEACND,QAAS,wBAEX,CACED,MAAO,yCACPE,KAAM,6EACND,QAAS,+BAEX,CACED,MAAO,2BACPE,KAAM,sCACND,QAAS,mCAEX,CACED,MAAO,oCACPE,KAAM,kDACND,QAAS,0CAEX,CACED,MAAO,wBACPE,KAAM,4EACND,QAAS,yBAEX,CACED,MAAO,WACPE,KAAM,wCACND,QAAS,oBAEX,CACED,MAAO,wBACPE,KAAM,gCACND,QACE,kEAEJ,CACED,MAAO,gCACPE,KAAM,2BACND,QAAS,2BAIf,cAACJ,EAAD,CACEC,KAAK,OACLC,MAAO,CACL,CACEC,MAAO,uBACPE,KAAM,oDACND,QAAS,oCAEX,CACED,MAAO,eACPE,KACE,kJACFD,QAAS,4CAEX,CACED,MAAO,aACPE,KAAM,qDACND,QAAS,2CAEX,CACED,MAAO,aACPE,KAAM,sCACND,QAAS,2CAEX,CACED,MAAO,kBACPE,KAAM,iCACND,QAAS,0BAEX,CACED,MAAO,uBACPE,KAAM,+BACND,QACE,uEAEJ,CACED,MAAO,wBACPE,KAAM,iDACND,QAAS,sDAEX,CACED,MAAO,4BACPE,KAAM,4DACND,QACE,yEASR,cAACJ,EAAD,CACEC,KAAK,OACLC,MAAO,CACL,CACEC,MAAO,aACPE,KAAM,8DACND,QAAS,yCAEX,CACED,MAAO,mBACPE,KAAM,6BACND,QAAS,iDAEX,CACED,MAAO,QACPE,KAAM,sCACND,QAAS,oBAEX,CACED,MAAO,iBACPE,KAAM,wDACND,QAAS,+CAEX,CACED,MAAO,cACPE,KAAM,mCACND,QACE,kEAIR,cAACJ,EAAD,CACEC,KAAK,cACLC,MAAO,CACL,CACEC,MAAO,QACPE,KAAM,uCACND,QAAS,0BAEX,CACED,MAAO,eACPE,KAAM,uCACND,QAAS,mDCnJDG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,cAACP,EAAD,IAASQ,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f3ae3b51.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lacan.16fe7c87.png\";","import React from \"react\";\nimport Lacan from \"./lacan.png\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLinkedin,\n  faGithub,\n  faFacebook,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nexport default function Face(props) {\n  return (\n    <Container>\n      <Row style={{ alignItems: \"center\" }}>\n        <Col>\n          <img\n            src={Lacan}\n            alt=\"img\"\n            style={{\n              objectFit: \"contain\",\n              width: \"inherit\",\n              borderRadius: 20,\n              transform: \"scale(0.8)\",\n            }}\n          />\n        </Col>\n        <Col>\n          <h1>Swain Hwang</h1>\n          <h2>Web Dev.</h2>\n          <h3>Javascript</h3>\n          <Row>\n            <Col>\n              {[\n                { site: \"https://linkedin.com/in/iamswain\", icon: faLinkedin },\n                { site: \"https://github.com/iamswain25\", icon: faGithub },\n                { site: \"https://facebook.com/iamswain\", icon: faFacebook },\n              ].map((i, index) => (\n                <a\n                  href={i.site}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  key={index}\n                  style={{ marginRight: 10 }}\n                >\n                  <FontAwesomeIcon icon={i.icon} size=\"3x\" />\n                </a>\n              ))}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\n\nexport default function Year({ year, lists }) {\n  return (\n    <section>\n      <h1>{year}</h1>\n      <ul>\n        {lists.map(({ title, website, desc }, i) => (\n          <li key={i}>\n            <h2>{title}</h2>\n            <h4>\n              <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                {website}\n              </a>\n            </h4>\n            <h5>{desc}</h5>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n","import React from \"react\";\nimport Face from \"./Face\";\nimport Year from \"./Year\";\nimport { Container } from \"react-bootstrap\";\nexport default function App() {\n  return (\n    <Container>\n      <Face />\n      <Year\n        year=\"2020\"\n        lists={[\n          {\n            title: \"action plan for social economy\",\n            desc: \"사회적경제 시민참여플랫폼\",\n            website: \"https://plan.sehub.net/\",\n          },\n          {\n            title: \"exposition for gyeonggi province village communities\",\n            desc: \"경기도 마을공동체 어올림 축제\",\n            website: \"https://eve.ggmaeul.or.kr\",\n          },\n          {\n            title: \"19th korean resident autonomy exposition\",\n            desc: \"19회 전국주민자치박람회\",\n            website: \"https://juminexpo.kr\",\n          },\n          {\n            title: \"Save the children: sharenting campaign\",\n            desc: \"셰어런팅 다시보기 프로젝트\",\n            website: \"https://sharenting.sc.or.kr\",\n          },\n          {\n            title: \"ywca korea peace gallery\",\n            desc: \"YWCA 평화갤러리\",\n            website: \"https://ywca-peacegallery.or.kr\",\n          },\n          {\n            title: \"seoul city architecture open call\",\n            desc: \"Open Call for Collaborative Research & Proposal\",\n            website: \"https://mix.beyondcovid19-opencall.org\",\n          },\n          {\n            title: \"(private) youth wagle\",\n            desc: \"국무조정실 청년정책추진단\",\n            website: \"https://youthwagle.kr\",\n          },\n          {\n            title: \"parti mx\",\n            desc: \"모두의 공론장\",\n            website: \"https://parti.mx\",\n          },\n          {\n            title: \"[mobile app] parti mx\",\n            desc: \"digital public sphere for all\",\n            website:\n              \"https://play.google.com/store/apps/details?id=coop.parti.p2020\",\n          },\n          {\n            title: \"[maintenance] parti campaigns\",\n            desc: \"campaign for public good\",\n            website: \"https://campaigns.kr\",\n          },\n        ]}\n      />\n      <Year\n        year=\"2019\"\n        lists={[\n          {\n            title: \"butterknifecrew 2019\",\n            desc: \"online public sphere platform for gender equality\",\n            website: \"https://2019.butterknifecrew.kr/\",\n          },\n          {\n            title: \"Users United\",\n            desc:\n              \"Stop getting pawned for your personal data. Demand Facebook give you your fair share by joining the #FacebookBoycott. We're stronger, together.\",\n            website: \"https://iamswain25.github.io/usersunited\",\n          },\n          {\n            title: \"simplealgo\",\n            desc: \"Making React Component for simple algo operations.\",\n            website: \"https://iamswain25.github.io/simplealgo\",\n          },\n          {\n            title: \"parti blog\",\n            desc: \"basic blog with user, post, comment\",\n            website: \"https://iamswain25.github.io/parti-blog\",\n          },\n          {\n            title: \"mbti for others\",\n            desc: \"Questionairre for others' MBTI\",\n            website: \"https://localee.space/\",\n          },\n          {\n            title: \"[mobile app] Localee\",\n            desc: \"Tag Map based on geolocation\",\n            website:\n              \"https://play.google.com/store/apps/details?id=space.localee.android\",\n          },\n          {\n            title: \"Govt-expenditure-2019\",\n            desc: \"Tree map of K-govt 2019 Expenditure with D3.js\",\n            website: \"https://iamswain25.github.io/govt-expenditure-2019\",\n          },\n          {\n            title: \"[mobile app] Cartido Expo\",\n            desc: \"Crowdmapping mobile app with React Native, Expo, Firebase\",\n            website:\n              \"https://play.google.com/store/apps/details?id=com.diginido.cartido\",\n          },\n          // {\n          //   title: \"Cartido Frontend\",\n          //   desc: \"Crowdmapping mobile app generator with React, Firebase\",\n          //   website: \"private\"\n          // }\n        ]}\n      />\n      <Year\n        year=\"2018\"\n        lists={[\n          {\n            title: \"US Refugee\",\n            desc: \"Total refugees settlement in States in 2002-2018 with D3.js\",\n            website: \"https://iamswain25.github.io/refugees\",\n          },\n          {\n            title: \"Morley's Miracle\",\n            desc: \"Morley's trisector theorem\",\n            website: \"https://iamswain25.github.io/Morley-s-miracle\",\n          },\n          {\n            title: \"B2ber\",\n            desc: \"Korean b2b solution review platform\",\n            website: \"https://b2ber.co\",\n          },\n          {\n            title: \"Political Life\",\n            desc: \"Translation project for a Communist's journal in 1994\",\n            website: \"https://iamswain25.github.io/political-life\",\n          },\n          {\n            title: \"Giga Viewer\",\n            desc: \"Museum viewer with OpenSeadragon\",\n            website:\n              \"http://www.kyeonggi.com/news/articleView.html?idxno=1422692\",\n          },\n        ]}\n      />\n      <Year\n        year=\"2016 ~ 2017\"\n        lists={[\n          {\n            title: \"Eliga\",\n            desc: \"CMS for signage content broadcasting\",\n            website: \"http://www.eligaws.com\",\n          },\n          {\n            title: \"Eliga Fabric\",\n            desc: \"signage layout drawer with Fabric.js\",\n            website: \"https://iamswain25.github.io/eliga_fabric\",\n          },\n        ]}\n      />\n    </Container>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}